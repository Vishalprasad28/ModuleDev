<?php

/**
 * @file
 * Contains the hook impletemnations.
 */

use Drupal\Core\Entity\Display\EntityViewDisplayInterface;
use Drupal\Core\Entity\EntityInterface;
use Drupal\Core\Routing\RouteMatchInterface;

/**
 * Implements hook_permission().
 */
function helloworld_permission() {
  return [
    'administer hello module' => [
      'title' => t('Administer my module'),
      'description' => t('Perform administration tasks for my module.'),
    ],
  ];
}

/**
 * Implements hook_help().
 */
function helloworld_help($route_name, RouteMatchInterface $route_match) {
  switch ($route_name) {
    case 'help.page.helloworld':
      return '<p>' . '<h3>' . t('Its a custom Page') . '</h3>' . t('Where your name and the email id will be printed  provided you are logged in, also it has a feature of printing the content based on route parameter,') . '<br> <i>' . t('This Page is being brought by implementing the ') . '<strong><a href="https://api.drupal.org/api/drupal/core%21modules%21help%21help.api.php/function/hook_help/10">hook_help()</a></strong> </i>' . '</p>';
  }
}

/**
 * Implements hook_hello_greet().
 */
function helloworld_hello_greet(int $count, string $bundle_name, array &$build) {
  $build['hello_world'] = [
    '#type' => 'markup',
    '#markup' => t('This node is of <strong> @bundle_type </strong> type and it has been 
      visited <strong> @count </strong> times', 
      ['@bundle_type' => $bundle_name, '@count' => $count]),
    '#cache' => [
      'tags' => ['node_list'],
    ],
  ];
}

/**
 * Implements hook_node_view().
 */
function helloworld_node_view(array &$build, EntityInterface $entity, EntityViewDisplayInterface $display, $view_mode) {

  // Initiating a session variable to store the viewing count of different nodes.
  $session = \Drupal::request()->getSession();

  // Getting the name of the session and the type of data it needs to store.
  $current_count = $session->get('node_view_count', array());

  // Checking if an entity with given id has been visited or not.
  $current_count[$entity->id()] = !isset($current_count[$entity->id()]) ? 1 : ++$current_count[$entity->id()];
  $session->set('node_view_count', $current_count);
  $module_handler = \Drupal::moduleHandler();

  // Invoking all the hooks with given name and passing the required parameters
  // to them.
  $module_handler->invokeAll('hello_greet',array($current_count[$entity->id()], $entity->bundle(), &$build));
}
